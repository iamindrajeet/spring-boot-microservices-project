#spring.datasource.url=jdbc:mysql://localhost:3306/employee_db
#spring.datasource.username=root
#spring.datasource.password=root
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=update
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#
#server.port=8081
#
## Eureka Configuration
#eureka.client.service-url.default-zone=http://localhost:8761/eureka/

# Application Name
spring.application.name=EMPLOYEE-SERVICE

# Instance Configuration
#eureka.instance.prefer-ip-address=true
#eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#specifying the url of config server to load configuration for employee-service from github
spring.config.import=optional:configserver:http://localhost:8888

#rabbit mq related configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#1. management.tracing.sampling.probability=1.0 - Default value is 0.1 i.e mean only 10% of the REST Calls will be traced. 1.0 Will trace each REST Call and get a display.
#2. logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
#With this logging pattern the REST call Trace ID and Span ID will be known and can be searched on ZipKin web page.
#3. logging.level.org.springframework.web=DEBUG - In depth logs are known, which are helpful for testing and debuging.
management.tracing.sampling.probability=1.0 
logging.pattern.level='%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
logging.level.org.springframework.web=DEBUG

spring.zipkin.base-url=http://127.0.0.1:9411/zipkin/

#Actuator endpoints for circuit-breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#circuuit-breaker configuration
#EMPLOYEE-SERVICE here is the circuit breaker name which is same as application name in this case
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.register-health-indicator=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.sliding-window-size=10
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.sliding-window-type=COUNT_BASED

#retry configuration
#resilience4j.retry.instances.EMPLOYEE-SERVICE.register-health-indicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.max-attempts=3
resilience4j.retry.instances.EMPLOYEE-SERVICE.wait-duration=2s